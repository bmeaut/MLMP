metrics {
    override mutable potency? in {0..*} on Node, Edge, Field;
	mutable leapPotency? in {2..*} on Node, Edge;
}

rules {
    omit N1, N2, N3, E1, E2, E3, F2, F3;

    #LP1: (potency = null and leapPotency != null) or
        (potency != null and leapPotency = null);
    #LP2: Field.potency != null;

    #LP3: leapPotency <= level;
    #LP4: Inheritance.leapPotency = null;

    // Was N1-3
    #N_classic: if (Node.meta.potency != null) {
        Node.meta.potency != 0;
        Node.level = Node.meta.level - 1;
        Node.potency = Node.meta.potency - 1;

        // Was F2-3
        Field.level = Field.meta.level - 1
            where Field in Node.fields;
        Field.potency = Field.meta.potency - 1
            where Field in Node.fields;
    }

    // Was E1-3
    #E_classic: if (Edge.meta.potency != null) {
            Edge.meta.potency != 0;
            Edge.level = Edge.meta.level - 1;
            Edge.potency = Edge.meta.potency - 1;
    }

    // New leap semantics
    #N_leap: if (Node.meta.leapPotency != null) {
        Node.level = Node.meta.level - Node.meta.leapPotency;
        Node.potency = 0;

        Field.level = Field.meta.level - Node.meta.leapPotency
            where Field in Node.fields;
        Field.potency = Field.potency - Node.meta.leapPotency;
    }

    #E_leap: if (Edge.meta.leapPotency != null) {
        Edge.level = Edge.meta.level - Edge.meta.leapPotency;
        Edge.potency = 0;
    }
}